demo()
demo(package = .packages(all.available = TRUE))
graphics
bqse
base
matrix(sample (1:6, 2*1000, replace true ), 2, 1000))
matrix(sample (1:6, 2*1000, replace= true ), 2, 1000))
matrix(sample (1:6, 2*1000, replace= true ), 2, 1000)
matrix(sample (1:6, 2*1000, replace= TRUE ), 2, 1000)
x=matrix(sample (1:6, 2*1000, replace= TRUE ), 2, 1000)
y= colSums(x)
z= sum(y==7)
mean(z)
x=matrix(sample (1:6, 2*10000, replace= TRUE ), 2, 1000)
mean (sum(colsums(x)==12))
mean (sum(colSums(x)==12))
2+3
3.14^3.14
100*mean(sin(30:87))
x = rbinom(1000,1,.5)
total = sum(x)
sum(x)
find.package("devtools")
install.packages("devtools")
library (devtools)
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
library(xlsx)
websubset<-read.xlsx("D:/Documents/Dev/DS_spe_JH/web2.xlsx", sheetIndex=1, colIndex=7:15, rowindex=18:23)
library(xlsx)
websubset<-read.xlsx("D:/Documents/Dev/DS_spe_JH/web2.xlsx", sheetIndex=1, colIndex=7:15, rowindex=18:23)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", destfile="D:/Documents/Dev/DS_spe_JH/web2.xls", mode='wb')
library(xlsx)
websubset<-read.xlsx("D:/Documents/Dev/DS_spe_JH/web2.xlsx", sheetIndex=1, colIndex=7:15, rowindex=18:23)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", destfile="D:/Documents/Dev/DS_spe_JH/web2.xls", mode='wb')
library(xlsx)
websubset<-read.xlsx("D:/Documents/Dev/DS_spe_JH/web2.xlsx", sheetIndex=1, colIndex=7:15, rowindex=18:23)
?read.xlsx
websubset<-read.xlsx("D:/Documents/Dev/DS_spe_JH/web2.xlsx", sheetIndex=1, colIndex=7:15)
websubset<-read.xlsx("D:/Documents/Dev/DS_spe_JH/web2.xlsx", sheetIndex=1, colIndex=7:15, rowindex=18:23, mode=wb)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", destfile="D:/Documents/Dev/DS_spe_JH/web2.xls", mode='wb')
library(xlsx)
websubset<-read.xlsx("D:/Documents/Dev/DS_spe_JH/web2.xlsx", sheetIndex=1, colIndex=7:15, rowindex=18:23)
install.packages("xlsx")
install.packages("rJava")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", destfile="D:/Documents/Dev/DS_spe_JH/web2.xls", mode='wb')
library(xlsx)
websubset<-read.xlsx("D:/Documents/Dev/DS_spe_JH/web2.xlsx", sheetIndex=1, colIndex=7:15, rowindex=18:23)
library(xlsx)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", destfile="D:/Documents/Dev/DS_spe_JH/web2.xls", mode='wb')
websubset<-read.xlsx("D:/Documents/Dev/DS_spe_JH/web2.xlsx", sheetIndex=1, colIndex=7:15, rowindex=18:23)
install.packages("rjava")
install.packages("readxl")
readxl read_excel
install.packages("gdata")
library(gdata)
websubset<-read.xlsx("D:/Documents/Dev/DS_spe_JH/web2.xlsx", sheetIndex=1, colIndex=7:15, rowindex=18:23)
library(xlsx)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", destfile="D:/Documents/Dev/DS_spe_JH/web2.xlsx", mode='wb')
websubset<-read.xlsx("D:/Documents/Dev/DS_spe_JH/web2.xlsx", sheetIndex=1, colIndex=7:15, rowindex=18:23)
library(xlsx)
x<-7:15
y<-18:23
websubset<-read.xlsx("D:/Documents/Dev/DS_spe_JH/web2.xlsx", sheetIndex=1, colIndex=x, rowindex=y)
websubset<-read.xlsx("D:/Documents/Dev/DS_spe_JH/web2.xlsx", sheetIndex=1, colIndex=1, rowindex=2)
websubset<-read.xlsx("D:/Documents/Dev/DS_spe_JH/web2.xlsx", sheetIndex=1, colIndex=x, rowIndex=y)
sum(websubset$Zip*dat$Ext,na.rm=T)
sum(websubset$Zip*websubset$Ext,na.rm=T)
install.packages("xml")
install.packages("XML")
library(XML)
docxml<-xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", useInternal=T) )
library(XML)
docxml<-xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", useInternal=T)
fileurl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
docxml<-xmlTreeParse(fileurl, useInternal=T)
str("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml")
fileurl<-"http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
docxml<-xmlTreeParse(fileurl, useInternal=T)
rootnode<-xmlRoot(docxml)
xmlName(rootnode)
names(rootnode)
rootnode[[1][1]]
rootnode[[1]]
download.file(https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv, destfile="D:/Documents/Dev/DS_spe_JH/web.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", destfile="D:/Documents/Dev/DS_spe_JH/web.csv")
fread(web.csv)
library(data.table)
fread(web.csv)
setwd("D/Documents/Dev")
fread(web.csv)
fread("D:/Documents/Dev/DS_spe_JH/web.csv")
?system.time
x<-fread("D:/Documents/Dev/DS_spe_JH/web.csv")
system.time(mean(DT$pwgtp15,by=DT$SEX))
DT<-fread("D:/Documents/Dev/DS_spe_JH/web.csv")
system.time(mean(DT$pwgtp15,by=DT$SEX))
sum(1000*system.time(mean(DT$pwgtp15,by=DT$SEX))
x<-sum(1000*system.time(mean(DT$pwgtp15,by=DT$SEX))
DT<-fread("D:/Documents/Dev/DS_spe_JH/web.csv")
system.time(for 1:1000 {mean(DT$pwgtp15,by=DT$SEX)})
?for
q
?for
??
??for
system.time(for i in 1:1000 {mean(DT$pwgtp15,by=DT$SEX)})
(for i in 1:1000 {mean(DT$pwgtp15,by=DT$SEX)})
for i in 1:1000 {mean(DT$pwgtp15,by=DT$SEX)}
for (i in 1:1000) {mean(DT$pwgtp15,by=DT$SEX)}
system.time(for (i in 1:1000) {mean(DT$pwgtp15,by=DT$SEX)})
system.time(for (i in 1:10000) {mean(DT$pwgtp15,by=DT$SEX)})
system.time(for (i in 1:10000) {tapply(DT$pwgtp15,DT$SEX,mean)})
system.time(for (i in 1:10000) {mean(DT$pwgtp15,by=DT$SEX)})
system.time(for (i in 1:10000) {tapply(DT$pwgtp15,DT$SEX,mean)})
system.time(for (i in 1:10000) {DT[,mean(pwgtp15),by=SEX]})
system.time(for (i in 1:10000) {sapply(split(DT$pwgtp15,DT$SEX),mean)})
system.time(for (i in 1:10000) {rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]})
system.time(for (i in 1:10000) {mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)})
mean(DT$pwgtp15,by=DT$SEX)
tapply(DT$pwgtp15,DT$SEX,mean)
DT[,mean(pwgtp15),by=SEX]
sapply(split(DT$pwgtp15,DT$SEX),mean)
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
system.time(for (i in 1:10000) {tapply(DT$pwgtp15,DT$SEX,mean)})
system.time(for (i in 1:10000) {DT[,mean(pwgtp15),by=SEX]})
system.time(for (i in 1:10000) {sapply(split(DT$pwgtp15,DT$SEX),mean)})
system.time(for (i in 1:10000) {mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)})
system.time(for (i in 1:10000) {mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)})
?read.delim
?list.files
?paste
`001` <- read.csv("D:/Documents/Data Science/DS_spe_JH/2. R programming/Assignment 1/specdata/001.csv")
View(`001`)
pollutantmean("D:/Documents/Data Science/DS_spe_JH/2. R programming/Assignment 1/specdata/", "sulfate")
pollutantmean <- function(directory, pollutant, id = 1:332) {
setwd(directory)
for (i in id) {
x <- read.csv(as.character(paste(sprintf("%03s",i),".csv")))
data<-rbind(data,x)
}
colnames<-(data, c(date, sulfate, nitrate, id))
colMeans(as.character(paste(pollutant,"$data")), na.rm = T)
}
pollutantmean("D:/Documents/Data Science/DS_spe_JH/2. R programming/Assignment 1/specdata/", "sulfate")
pollutantmean <- function(directory, pollutant, id = 1:332) {
setwd(directory)
for (i in id) {
x <- read.csv(as.character(paste(sprintf("%03s",i),".csv")))
data<-rbind(data,x)
}
colnames<-(data, c("date", "sulfate", "nitrate", "id"))
colMeans(as.character(paste(pollutant,"$data")), na.rm = T)
}
pollutantmean("D:/Documents/Data Science/DS_spe_JH/2. R programming/Assignment 1/specdata/", "sulfate")
pollutantmean <- function(directory, pollutant, id = 1:332) {
setwd(directory)
for (i in id) {
x <- read.csv(as.character(paste(sprintf("%03s",i),".csv")))
dat<-rbind(dat,x)
}
print(dat)
colnames<-(dat, c("date", "sulfate", "nitrate", "id"))
colMeans(as.character(paste(pollutant,"$dat")), na.rm = T)
}
pollutantmean("D:/Documents/Data Science/DS_spe_JH/2. R programming/Assignment 1/specdata/", "sulfate")
debug()
debug(pollutantmean)
pollutantmean <- function(directory, pollutant, id = 1:332) {
setwd(directory)
for (i in id) {
x <- read.csv(as.character(paste(sprintf("%03s",i),".csv")))
dat<-rbind(dat, x)
}
print(dat)
colnames<-(dat, c("date", "sulfate", "nitrate", "id"))
colMeans(as.character(paste(pollutant,"$dat")), na.rm = T)
}
debug(pollutantmean)
pollutantmean <- function(directory, pollutant, id = 1:332) {
setwd(directory)
for (i in id) {
x <- read.csv(as.character(paste(sprintf("%03s",i),".csv")))
dat<-rbind(dat, x)
}
print(dat)
colnames<-(dat c("date", "sulfate", "nitrate", "id"))
colMeans(as.character(paste(pollutant,"$dat")), na.rm = T)
colNames <- (dat, c("date", "sulfate", "nitrate", "id"))
pollutantmean <- function(directory, pollutant, id = 1:332) {
setwd(directory)
for (i in id) {
x <- read.csv(as.character(paste(sprintf("%03s",i),".csv")))
dat<-rbind(dat, x)
}
print(dat)
colMeans(as.character(paste(pollutant,"$dat")), na.rm = T)
pollutantmean <- function(directory, pollutant, id = 1:332) {
setwd(directory)
for (i in id) {
x <- read.csv(as.character(paste(sprintf("%03s",i),".csv")))
dat<-rbind(dat, x)
}
print(dat)
colMeans(as.character(paste(pollutant,"$dat")), na.rm = T)
}
debug(pollutantmean)
pollutantmean("D:/Documents/Data Science/DS_spe_JH/2. R programming/Assignment 1/specdata/", "sulfate")
pollutantmean("D:/Documents/Data Science/DS_spe_JH/2. R programming/Assignment 1/specdata/", "sulfate")
l<-pollutantmean("D:/Documents/Data Science/DS_spe_JH/2. R programming/Assignment 1/specdata/", "sulfate")
h
j
j
j
j
j
j
df<-read.table("household_power_consumption.txt", sep=";", header=TRUE)
df$Date<-as.Date(df$Date, format="%d/%m/%Y" )
#subset data table
df1<-df[df$Date=="2007-02-01"|df$Date=="2007-02-02",]
#convert variables
#df$Time<-strptime(df$Time, format="%H:%M:%S")
df$Global_active_power<-as.numeric(as.character(df$Global_active_power))
#df["moment"]<-as.POSIXct(paste(df$Date, df$Time),"%d/%m/%Y %H:%M:%S")
df <- transform(df, Moment=as.POSIXct(paste(Date, Time)), "%d/%m/%Y %H:%M:%S")
df<-read.table("household_power_consumption.txt", sep=";", header=TRUE)
setwd("D:/Documents/Data Science/Courses/Exploratory Data Analysis")
df<-read.table("household_power_consumption.txt", sep=";", header=TRUE)
df1<-df[df$Date=="2007-02-01"|df$Date=="2007-02-02",]
df$Date<-as.Date(df$Date, format="%d/%m/%Y" )
df1<-df[df$Date=="2007-02-01"|df$Date=="2007-02-02",]
df1$Global_active_power<-as.numeric(as.character(df1$Global_active_power))
#df["moment"]<-as.POSIXct(paste(df$Date, df$Time),"%d/%m/%Y %H:%M:%S")
df1 <- transform(df1, Moment=as.POSIXct(paste(Date, Time)), "%d/%m/%Y %H:%M:%S")
View(df1)
df1<-df[df$Date=="2007-02-01"|df$Date=="2007-02-02",]
#convert variables
#df$Time<-strptime(df$Time, format="%H:%M:%S")
df1$Global_active_power<-as.numeric(as.character(df1$Global_active_power))
#df["moment"]<-as.POSIXct(paste(df$Date, df$Time),"%d/%m/%Y %H:%M:%S")
df1 <- transform(df1, Moment=as.POSIXct(paste(Date, Time),"%d/%m/%Y %H:%M:%S"))
View(df1)
plot(df$Moment, df$Global_active_power)
plot(df1$Moment, df1$Global_active_power)
plot(df1$Moment, df1$Global_active_power, xlab = "n", ylab="Global Active Power (kw)")
plot(df1$Moment, df1$Global_active_power, xlab = NULL, ylab="Global Active Power (kw)")
df1 <- transform(df1, Moment=as.POSIXct(paste(Date, Time),format="%d/%m/%Y %H:%M:%S"))
View(df1)
df1<-df[df$Date=="2007-02-01"|df$Date=="2007-02-02",]
#convert variables
#df$Time<-strptime(df$Time, format="%H:%M:%S")
df1$Global_active_power<-as.numeric(as.character(df1$Global_active_power))
df1 <- transform(df1, Moment=as.POSIXct(paste(Date, Time),"%d/%m/%Y %H:%M:%S"))
#plot2
plot(df1$Moment, df1$Global_active_power, xlab = NULL, ylab="Global Active Power (kw)")
View(df1)
df1<-df[df$Date=="2007-02-01"|df$Date=="2007-02-02",]
#convert variables
#df$Time<-strptime(df$Time, format="%H:%M:%S")
df1$Global_active_power<-as.numeric(as.character(df1$Global_active_power))
df1 <- transform(df1, Moment=as.POSIXct(paste(Date, Time), format="%d/%m/%Y %H:%M:%S"))
View(df1)
df1<-df[df$Date=="2007-02-01"|df$Date=="2007-02-02",]
#convert variables
#df$Time<-strptime(df$Time, format="%H:%M:%S")
df1$Global_active_power<-as.numeric(as.character(df1$Global_active_power))
df1 <- transform(df1, Moment=as.POSIXct(paste(Date, Time)))
View(df1)
plot(df1$Moment, df1$Global_active_power, type="1" xlab="", ylab="Global Active Power (kw)")
plot(df1$Moment, df1$Global_active_power, type="1", xlab="", ylab="Global Active Power (kw)")
plot(df1$Moment, df1$Global_active_power, type=1, xlab="", ylab="Global Active Power (kw)")
plot(df1$Moment, df1$Global_active_power, type=2, xlab="", ylab="Global Active Power (kw)")
plot(df1$Moment, df1$Global_active_power, type="o", xlab="", ylab="Global Active Power (kw)")
plot(df1$Moment, df1$Global_active_power, type="l", xlab="", ylab="Global Active Power (kw)")
?legend
df1$Sub_metering_1<-as.numeric(as.character(df1$Sub_metering_1))
df1$Sub_metering_2<-as.numeric(as.character(df1$Sub_metering_2))
df1$Sub_metering_3<-as.numeric(as.character(df1$Sub_metering_3))
df1 <- transform(df1, Moment=as.POSIXct(paste(Date, Time)))
#plot 3
plot(df1$Moment, df1$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(df1$Moment, df1$Sub_metering_2, col="red")
lines(df1$Moment, df1$Sub_metering_3, col="blue")
legend("topright", legend =c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black","red","blue"),lty=c(1,1) )
legend("topright", legend =c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black","red","blue"),lty=c(1,2) )
plot(df1$Moment, df1$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(df1$Moment, df1$Sub_metering_2, col="red")
lines(df1$Moment, df1$Sub_metering_3, col="blue")
legend("topright", legend =c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black","red","blue"),lty=c(1,2) )
plot(df1$Moment, df1$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(df1$Moment, df1$Sub_metering_2, col="red")
lines(df1$Moment, df1$Sub_metering_3, col="blue")
legend("topright", legend =c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black","red","blue"),lty=c(2,2) )
legend("topright", legend =c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black","red","blue"),lty=c(1,1) )
legend("topright", legend =c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black","red","blue"),lty=c(3,1) )
legend("topright", legend =c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black","red","blue"),lty=c(4,1) )
legend("topright", legend =c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black","red","blue"),lty=1 )
?par
df1$Voltage<-as.numeric(as.character(df1$Voltage))
df1$Global_reactive_power<-as.numeric(as.character(df1$Global_reactive_power))
par(mfrow=c(2,2))
#plot 1
plot(df1$Moment, df1$Global_active_power, type="l", xlab="", ylab="Global Active Power (kw)")
#plot 2
plot(df1$Moment, df1$Voltage, type="l", xlab = "datetime", ylab = "voltage")
#plot 3
plot(df1$Moment, df1$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(df1$Moment, df1$Sub_metering_2, col="red")
lines(df1$Moment, df1$Sub_metering_3, col="blue")
legend("topright", legend =c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black","red","blue"),lty=1 )
#plot 4
plot(df1$Moment, df1$Global_reactive_power, type="l", xlabel="datetime")
par(mfrow=c(2,2))
#plot 1
plot(df1$Moment, df1$Global_active_power, type="l", xlab="", ylab="Global Active Power (kw)")
#plot 2
plot(df1$Moment, df1$Voltage, type="l", xlab = "datetime", ylab = "Voltage")
#plot 3
plot(df1$Moment, df1$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(df1$Moment, df1$Sub_metering_2, col="red")
lines(df1$Moment, df1$Sub_metering_3, col="blue")
legend("topright", legend =c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black","red","blue"),lty=1 )
#plot 4
plot(df1$Moment, df1$Global_reactive_power, type="l", xlab="datetime", ylab=Global_reactive_power)
plot(df1$Moment, df1$Global_reactive_power, type="l", xlab="datetime", ylab="Global_reactive_power")
dev.copy(png, file="plot4.png", width=480, height=480)
dev.off()
cat("file saved as png in", getwd())
construct plot 1
hist(df1$Global_active_power, col="red", main= "Global Active Power", xlab="Global Active Power (kilowatts)")
# copy and save a png file of the plot1
dev.copy(png, file="plot1.png", width=480, height=480)
dev.off()
cat("file saved as plot1.png in", getwd())
par(mfrow=c(1,1))
hist(df1$Global_active_power, col="red", main= "Global Active Power", xlab="Global Active Power (kilowatts)")
# copy and save a png file of the plot1
dev.copy(png, file="plot1.png", width=480, height=480)
dev.off()
cat("file saved as plot1.png in", getwd())
plot(df1$Moment, df1$Global_active_power, type="l", xlab="", ylab="Global Active Power (kw)")
dev.copy(png, file="plot2.png", width=480, height=480)
dev.off()
cat("file saved as png in", getwd())
plot(df1$Moment, df1$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(df1$Moment, df1$Sub_metering_2, col="red")
lines(df1$Moment, df1$Sub_metering_3, col="blue")
legend("topright", legend =c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black","red","blue"),lty=1 )
dev.copy(png, file="plot3.png", width=480, height=480)
dev.off()
cat("file saved as png in", getwd())
plot(df1$Moment, df1$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(df1$Moment, df1$Sub_metering_2, col="red")
lines(df1$Moment, df1$Sub_metering_3, col="blue")
legend("topright", legend =c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black","red","blue"),lty=1, cex=.5)
dev.copy(png, file="plot3.png", width=480, height=480)
dev.off()
cat("file saved as png in", getwd())
plot(df1$Moment, df1$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(df1$Moment, df1$Sub_metering_2, col="red")
lines(df1$Moment, df1$Sub_metering_3, col="blue")
legend("topright", legend =c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black","red","blue"),lty=1, cex=.75)
dev.copy(png, file="plot3.png", width=480, height=480)
dev.off()
cat("file saved as png in", getwd())
png( file="plot3.png", width=480, height=480)
plot(df1$Moment, df1$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(df1$Moment, df1$Sub_metering_2, col="red")
lines(df1$Moment, df1$Sub_metering_3, col="blue")
legend("topright", legend =c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black","red","blue"),lty=1, cex=.75)
dev.copy(png, file="plot3.png", width=480, height=480)
dev.off()
cat("file saved as png in", getwd())
png( file="plot3.png", width=480, height=480)
plot(df1$Moment, df1$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(df1$Moment, df1$Sub_metering_2, col="red")
lines(df1$Moment, df1$Sub_metering_3, col="blue")
legend("topright", legend =c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black","red","blue"),lty=1, cex=.75)
#dev.copy(png, file="plot3.png", width=480, height=480)
dev.off()
cat("file saved as png in", getwd())
png(file="plot4.png", width=480, height=480)
par(mfrow=c(2,2))
#plot 1
plot(df1$Moment, df1$Global_active_power, type="l", xlab="", ylab="Global Active Power (kw)")
#plot 2
plot(df1$Moment, df1$Voltage, type="l", xlab = "datetime", ylab = "Voltage")
#plot 3
plot(df1$Moment, df1$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(df1$Moment, df1$Sub_metering_2, col="red")
lines(df1$Moment, df1$Sub_metering_3, col="blue")
legend("topright", legend =c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black","red","blue"),lty=1, bty = "n" )
#plot 4
plot(df1$Moment, df1$Global_reactive_power, type="l", xlab="datetime", ylab="Global_reactive_power")
#save png
dev.off()
cat("file saved as png in", getwd())
png(file=plot3)
png(file="plot3")
dev.off()
